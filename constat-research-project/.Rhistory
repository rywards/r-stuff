y=NFL_Team_Stats_2020$PF
# plotting the data and the best fit line
out=lm(x~y)
NFLPLOT=plot(x,y,xlab="Points Against",ylab="Points For")
NFLPLOT
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# R^2
summary(out)$r.squared
# relationship
summary(out)
getwd()
library("readr")
NFL_Team_Stats_2020=read.csv("NFL_Team_Stats_2020.txt")
x=NFL_Team_Stats_2020$PA
y=NFL_Team_Stats_2020$PF
# plotting the data and the best fit line
out=lm(x~y)
NFLPLOT=plot(x,y,xlab="Points Against",ylab="Points For")
NFLPLOT
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# R^2
summary(out)$r.squared
# relationship
summary(out)
# 95% confidence interval
confint(out,level=0.95)
predict=data.frame(x=400)
predict(out,predictdata=predict,interval="predict")
predict=data.frame(x=400)
predict(out,newdata=predict,interval="predict")
predict=data.frame(x=400)
predict(out,newdata,interval="predict")
# predicted value and the 95% prediction interval
new=data.frame(x=400)
predict(out,newdata=new,interval="predict")
new=data.frame(x=400)
predict(out,newdata=new,interval="prediction")
new=data.frame(x=400)
predict(x.lm,newdata=new,interval="prediction")
getwd()
library("readr")
NFL_Team_Stats_2020=read.csv("NFL_Team_Stats_2020.txt")
x=NFL_Team_Stats_2020$PA
y=NFL_Team_Stats_2020$PF
# plotting the data and the best fit line
out=lm(x~y)
NFLPLOT=plot(x,y,xlab="Points Against",ylab="Points For")
NFLPLOT
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# R^2
summary(out)$r.squared
# relationship values
summary(out)
# 95% confidence interval
confint(out,level=0.95)
# predicted value and the 95% prediction interval
new=data.frame(x=400)
predict(out,newdata=new,interval="prediction")
predict(out,data.frame(x=400) ,interval="prediction")
predict=data.frame(x=400)
predict(out,predictdata=predict,interval="prediction")
pred=data.frame(x=400)
predict(out,predictdata=pred,interval="prediction")
pred=data.frame(x=400)
predict(out,newdata=pred,interval="prediction", level=0.05)
pred=data.frame(x=400)
predict(out,newdata=pred,interval="predict", level=0.05)
pred=data.frame(NFL_Team_Stats_2020$PA=400)
pred=data.frame(y=400)
predict(out,newdata=pred,interval="predict", level=0.05)
pred=data.frame(x=400)
predict(out,newdata=pred,interval="predict", level=0.05)
pred=data.frame(x=400)
suppressWarnings(predict(out,newdata=pred,interval="predict", level=0.05))
resid=out$residuals
fitted=out$fitted
plot(fitted,resid,xlab='Fitted values',ylab='Residuals')
## qq plot can be used to check normality
qqnorm(resid)
qqline(resid)
hist(resid)
# Quick Stock data analysis
library("readr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
mytable=table(DAX,ISE.USD,SP,FTSE,NIKKEI,BOVESPA,EU,EM)
mytable
#average daily returns
mean(ISE.USD)
mean(DAX)
mean(SP)
mean(FTSE)
#total return
sum(ISE.USD)
sum(DAX)
sum(SP)
mean(ISE.USD)
mean(DAX)
mean(SP)
mean(FTSE)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
mytable=table(DAX,ISE.USD,SP,FTSE,NIKKEI,BOVESPA,EU,EM)
mytable
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
hist(mytable)
hist(100*sum(ISE.USD),100*sum(DAX))
# Quick Stock data analysis
library("readr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
#mytable=table(DAX,ISE.USD,SP,FTSE,NIKKEI,BOVESPA,EU,EM)
#mytable
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
with(stockInfo,count(sign(DAX)))
with(stockInfo,count(sign(DAX)))
posDays=nrow(stockInfo[stockInfo$DAX>0])
posDays
posDays=nrow(stockInfo[stockInfo$DAX>0,])
posDays
posISE=nrow(stockInfo[stockInfo$ISE.USD>0,])
posDAX=nrow(stockInfo[stockInfo$DAX>0,])
posSP=nrow(stockInfo[stockInfo$SP>0,])
posFTSE=nrow(stockInfo[stockInfo$FTSE>0,])
posNIKKEI=nrow(stockInfo[stockInfo$NIKKEI>0,])
posBOVESPA=nrow(stockInfo[stockInfo$BOVESPA>0,])
posEU=nrow(stockInfo[stockInfo$EU>0,])
posEM=nrow(stockInfo[stockInfo$EM>0,])
totalPos=(posISE+posDAX+posSP+posFTSE+posNIKKEI+posBOVESPA+posEU+posEM)
totalPos
posISE=nrow(stockInfo[stockInfo$ISE.USD>0,])
posDAX=nrow(stockInfo[stockInfo$DAX>0,])
posSP=nrow(stockInfo[stockInfo$SP>0,])
posFTSE=nrow(stockInfo[stockInfo$FTSE>0,])
posNIKKEI=nrow(stockInfo[stockInfo$NIKKEI>0,])
posBOVESPA=nrow(stockInfo[stockInfo$BOVESPA>0,])
posEU=nrow(stockInfo[stockInfo$EU>0,])
posEM=nrow(stockInfo[stockInfo$EM>0,])
### Negatives ###
negISE=nrow(stockInfo[stockInfo$ISE.USD<0,])
negDAX=nrow(stockInfo[stockInfo$DAX<0,])
negSP=nrow(stockInfo[stockInfo$SP<0,])
negFTSE=nrow(stockInfo[stockInfo$FTSE<0,])
negNIKKEI=nrow(stockInfo[stockInfo$NIKKEI<0,])
negBOVESPA=nrow(stockInfo[stockInfo$BOVESPA<0,])
negEU=nrow(stockInfo[stockInfo$EU<0,])
negEM=nrow(stockInfo[stockInfo$EM<0,])
totalPos=(posISE+posDAX+posSP+posFTSE+posNIKKEI+posBOVESPA+posEU+posEM)
totalNeg=(negISE+negDAX+negSP+negFTSE+negNIKKEI+negBOVESPA+negEU+negEM)
totalPos
totalNeg
x=stockInfo$ISE.USD
y=stockInfo$SP
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE",ylab="SP")
stock_plot
abline(out)
corr=cor(x,y)
corr
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="SP ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
x=stockInfo$ISE.USD
y=stockInfo$EM
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="EM ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
x=stockInfo$ISE.USD
y=stockInfo$SP
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="SP ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# confidence interval
confint(out,level=0.95)
pred=data.frame(x=0.005)
# Quick Stock data analysis
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
# Finding total positive and negative days
# with(stockInfo,count(sign(DAX)))
# we can use the individual data for later if we want
### Positives ###
posISE=nrow(stockInfo[stockInfo$ISE.USD>0,])
posDAX=nrow(stockInfo[stockInfo$DAX>0,])
posSP=nrow(stockInfo[stockInfo$SP>0,])
posFTSE=nrow(stockInfo[stockInfo$FTSE>0,])
posNIKKEI=nrow(stockInfo[stockInfo$NIKKEI>0,])
posBOVESPA=nrow(stockInfo[stockInfo$BOVESPA>0,])
posEU=nrow(stockInfo[stockInfo$EU>0,])
posEM=nrow(stockInfo[stockInfo$EM>0,])
### Negatives ###
negISE=nrow(stockInfo[stockInfo$ISE.USD<0,])
negDAX=nrow(stockInfo[stockInfo$DAX<0,])
negSP=nrow(stockInfo[stockInfo$SP<0,])
negFTSE=nrow(stockInfo[stockInfo$FTSE<0,])
negNIKKEI=nrow(stockInfo[stockInfo$NIKKEI<0,])
negBOVESPA=nrow(stockInfo[stockInfo$BOVESPA<0,])
negEU=nrow(stockInfo[stockInfo$EU<0,])
negEM=nrow(stockInfo[stockInfo$EM<0,])
# Totals
totalPos=(posISE+posDAX+posSP+posFTSE+posNIKKEI+posBOVESPA+posEU+posEM)
totalNeg=(negISE+negDAX+negSP+negFTSE+negNIKKEI+negBOVESPA+negEU+negEM)
totalPos
totalNeg
# regression
x=stockInfo$ISE.USD
y=stockInfo$SP
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="SP ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# confidence interval
confint(out,level=0.95)
x=stockInfo$ISE.USD
y=stockInfo$EM
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="EM ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
install.packages("tensorflow")
# Quick Stock data analysis
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
# Finding total positive and negative days
# with(stockInfo,count(sign(DAX)))
# we can use the individual data for later if we want
### Positives ###
posISE=nrow(stockInfo[stockInfo$ISE.USD>0,])
posDAX=nrow(stockInfo[stockInfo$DAX>0,])
posSP=nrow(stockInfo[stockInfo$SP>0,])
posFTSE=nrow(stockInfo[stockInfo$FTSE>0,])
posNIKKEI=nrow(stockInfo[stockInfo$NIKKEI>0,])
posBOVESPA=nrow(stockInfo[stockInfo$BOVESPA>0,])
posEU=nrow(stockInfo[stockInfo$EU>0,])
posEM=nrow(stockInfo[stockInfo$EM>0,])
### Negatives ###
negISE=nrow(stockInfo[stockInfo$ISE.USD<0,])
negDAX=nrow(stockInfo[stockInfo$DAX<0,])
negSP=nrow(stockInfo[stockInfo$SP<0,])
negFTSE=nrow(stockInfo[stockInfo$FTSE<0,])
negNIKKEI=nrow(stockInfo[stockInfo$NIKKEI<0,])
negBOVESPA=nrow(stockInfo[stockInfo$BOVESPA<0,])
negEU=nrow(stockInfo[stockInfo$EU<0,])
negEM=nrow(stockInfo[stockInfo$EM<0,])
# Totals
totalPos=(posISE+posDAX+posSP+posFTSE+posNIKKEI+posBOVESPA+posEU+posEM)
totalNeg=(negISE+negDAX+negSP+negFTSE+negNIKKEI+negBOVESPA+negEU+negEM)
totalPos
totalNeg
# regression
x=stockInfo$ISE.USD
y=stockInfo$SP
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="SP ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# confidence interval
confint(out,level=0.95)
x=stockInfo$ISE.USD
y=stockInfo$EM
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="EM ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# Data Mining Project
# Regression of used car price
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Fall 2021\Intro to Data Mining\Project")
getwd()
carInfo=read.csv("belarus_used_cars.csv")
# Data Mining Project
# Regression of used car price
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Fall 2021\Intro to Data Mining\Project")
getwd()
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Spring 2021\Con Stat\Research Project\Istanbul Stock")
getwd()
# Quick Stock data analysis
library("readr")
library("plyr")
setwd("D:\\Documents\\School Documents\\Spring 2021\\Con Stat\\Research Project\\Istanbul Stock")
getwd()
# Quick Stock data analysis
library("readr")
library("plyr")
setwd("D:\\Documents\\School Documents\\Spring 2021\\Con Stat\\Research Project\\Istanbul Stock")
getwd()
stockInfo=read.csv("data_akbilgic.csv")
head(stockInfo)
attach(stockInfo)
#average daily returns
100*mean(ISE.USD)
100*mean(DAX)
100*mean(SP)
100*mean(FTSE)
100*mean(NIKKEI)
100*mean(BOVESPA)
100*mean(EU)
100*mean(EM)
#total return
100*sum(ISE.USD)
100*sum(DAX)
100*sum(SP)
100*sum(FTSE)
100*sum(NIKKEI)
100*sum(BOVESPA)
100*sum(EU)
100*sum(EM)
# Finding total positive and negative days
# with(stockInfo,count(sign(DAX)))
# we can use the individual data for later if we want
### Positives ###
posISE=nrow(stockInfo[stockInfo$ISE.USD>0,])
posDAX=nrow(stockInfo[stockInfo$DAX>0,])
posSP=nrow(stockInfo[stockInfo$SP>0,])
posFTSE=nrow(stockInfo[stockInfo$FTSE>0,])
posNIKKEI=nrow(stockInfo[stockInfo$NIKKEI>0,])
posBOVESPA=nrow(stockInfo[stockInfo$BOVESPA>0,])
posEU=nrow(stockInfo[stockInfo$EU>0,])
posEM=nrow(stockInfo[stockInfo$EM>0,])
### Negatives ###
negISE=nrow(stockInfo[stockInfo$ISE.USD<0,])
negDAX=nrow(stockInfo[stockInfo$DAX<0,])
negSP=nrow(stockInfo[stockInfo$SP<0,])
negFTSE=nrow(stockInfo[stockInfo$FTSE<0,])
negNIKKEI=nrow(stockInfo[stockInfo$NIKKEI<0,])
negBOVESPA=nrow(stockInfo[stockInfo$BOVESPA<0,])
negEU=nrow(stockInfo[stockInfo$EU<0,])
negEM=nrow(stockInfo[stockInfo$EM<0,])
# Totals
totalPos=(posISE+posDAX+posSP+posFTSE+posNIKKEI+posBOVESPA+posEU+posEM)
totalNeg=(negISE+negDAX+negSP+negFTSE+negNIKKEI+negBOVESPA+negEU+negEM)
totalPos
totalNeg
# regression
x=stockInfo$ISE.USD
y=stockInfo$SP
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="SP ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# confidence interval
confint(out,level=0.95)
x=stockInfo$ISE.USD
y=stockInfo$EM
out=lm(x~y)
stock_plot=plot(x,y,xlab="USD Based ISE ADR",ylab="EM ADR")
stock_plot
abline(out)
# correlation of the variables
corr=cor(x,y)
corr
# Data Mining Project
# Regression of used car price
library("readr")
library("plyr")
setwd("D:\Documents\School Documents\Fall 2021\Intro to Data Mining\Project")
getwd()
carInfo=read.csv("belarus_used_cars.csv")
